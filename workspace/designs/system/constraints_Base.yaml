#base configuration 
# - 1 GPU, that says run the model, with very relaxed constraints. 
# - num_gpus GPUs, then just run the model using the resources as best, without a defined strategy. 
#     -> num_gpus GPUs that is really 1 block for resources, and the mapper just does it how it wants. 

constraints:
  version: 0.4
  targets:
  - target: DRAM
    type: dataspace
    keep: [Inputs, Outputs, Weights]
    bypass: []
 
  - target: GPU
    type: spatial
    factors: 
    - P=1
    - Q=1
    - R=1
    - S=1
    - N <= {{num_gpus}}
    - C=1
    - M=1
    permutation: [N, M, R, S, P, Q, C]
    
  - target: global_buffer
    type: dataspace
    keep: [Inputs, Outputs, Weights]
    bypass: []
 
  - target: PE
    type: spatial
    factors: 
    - P=1
    - Q=1
    - R=1
    - S=1
    - N=1
    - C<={{pe_meshX}}
    - M<={{pe_meshY}}
    permutation: [C, M, R, S, P, Q, N]
    split: 1
    
  - target: scratchpad
    type: dataspace
    keep: [Weights]
    bypass: [Inputs, Outputs]
  - target: scratchpad
    type: temporal
    factors: [R=0, S=0, P=0, Q=0, M=1, C=1]
    permutation: [Q, P, N, C, M, S, R]

  - target: weight_reg
    type: dataspace
    keep: [Weights]
    bypass: [Inputs, Outputs]
  - target: weight_reg
    type: temporal
    factors: [R=1, S=1, P=1, Q=1, N=1, C=1, M=1]
    permutation: [R, S, P, Q, C, M, N]
  - target: input_activation_reg
    type: dataspace
    keep: [Inputs]
    bypass: [Weights, Outputs]
  - target: input_activation_reg
    type: temporal
    factors: [R=1, S=1, P=1, Q=1, N=1, C=1, M=1]
    permutation: [R, S, P, Q, C, M, N]
  - target: output_activation_reg
    type: dataspace
    keep: [Outputs]
    bypass: [Weights, Inputs]
  - target: output_activation_reg
    type: temporal
    factors: [R=1, S=1, P=1, Q=1, N=1, C=1, M=1]
    permutation: [R, S, P, Q, C, M, N]